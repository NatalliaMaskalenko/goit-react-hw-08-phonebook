{"version":3,"sources":["redux/phonebook/phonebook-operations.js","redux/auth/auth-operations.js","redux/phonebook/phonebook-actions.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Container/Container.js","redux/auth/auth-selectors.js","components/AppBar/AuthNav.js","components/AppBar/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","number","rejectWithValue","contact","completed","post","deleteContact","contactId","delete","register","credentials","logIn","changeFilter","createAction","module","exports","Container","children","className","s","container","getIsLoggedIn","state","auth","IsLoggedIn","getUserName","user","AuthNav","navigation","to","link","activeClassName","activeLink","Navigation","exact","styles","display","alignItems","avatar","marginRight","fontWeight","UserMenu","useDispatch","useSelector","style","AppBar","isLoggedIn","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","fallback","path","items","createReducer","fulfilled","_","payload","filter","id","loading","pending","rejected","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","action","tocken","AuthPersistConfig","key","storage","whitelist","ContactsPersistConfig","rootReduser","contacts","persistReducer","phonebookReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9302433d.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n// import {\r\n//     addRequest,\r\n//     addSuccess,\r\n//     addError,\r\n//     deleteRequest,\r\n//     deleteSuccess,\r\n//     deleteError,\r\n//     fetchContactsRequest,\r\n//     fetchContactsSuccess,\r\n//     fetchContactsError,\r\n    \r\n// } from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://61abb3b6264ec200176d42f8.mockapi.io/api/v1/';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contact/fetchContacts',\r\n    async () => {\r\n        const { data } = await axios.get('/contacts');\r\n        return data;\r\n    }\r\n\r\n);\r\n\r\nexport const addContact = createAsyncThunk('addContact', async ({ name, number }, { rejectWithValue }) => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n        completed: false,\r\n    };\r\n            \r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n        return data;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n});\r\n\r\nexport const deleteContact = createAsyncThunk('deleteContact', async (contactId, { rejectWithValue }) => {\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`);\r\n        return contactId;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n})\r\n\r\n// export const deleteContact = contactId => dispatch => {\r\n//     dispatch(deleteRequest());\r\n//     axios\r\n//         .delete(`/contacts/${contactId}`)\r\n//         .then(() => dispatch(deleteSuccess(contactId)))\r\n//         .catch(error => dispatch(deleteError(error)));\r\n\r\n// };\r\n\r\n\r\n// export const addContact = ({ name, number }) => dispatch => {\r\n//     const contact = {\r\n//         name,\r\n//         number,\r\n//         completed: false,\r\n//     };\r\n\r\n//     dispatch(addRequest());\r\n\r\n//     axios\r\n//         .post('/contacts', contact)\r\n//         .then(({ data }) => dispatch(addSuccess(data)))\r\n//         .catch(error => dispatch(addError(error)));\r\n// };\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//     dispatch(fetchContactsRequest());\r\n\r\n//     try {\r\n//         const { data } = await axios.get('/contacts');\r\n//         dispatch(fetchContactsSuccess(data));\r\n//         console.log(data);\r\n//     } catch (error) {\r\n//        dispatch(fetchContactsError(error)) \r\n//     }\r\n\r\n//     // axios\r\n//     //     .get('/contacts')\r\n//     //     .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n//     //     .catch(error => dispatch(fetchContactsError(error)));       \r\n// };\r\n\r\n\r\n\r\n// export const deleteContact = contactId => dispatch => {\r\n//     dispatch(deleteRequest());\r\n//     axios\r\n//         .delete(`/contacts/${contactId}`)\r\n//         .then(() => dispatch(deleteSuccess(contactId)))\r\n//         .catch(error => dispatch(deleteError(error)));\r\n\r\n// };","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n}); ","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contact/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contact/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\nexport const addRequest = createAction('contact/addRequest');\r\nexport const addSuccess = createAction('contact/addSuccess');\r\nexport const addError = createAction('contact/addError');\r\n\r\nexport const deleteRequest = createAction('contact/deleteRequest');\r\nexport const deleteSuccess = createAction('contact/deleteSuccess');\r\nexport const deleteError = createAction('contact/deleteError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n\r\n// export const deleteContact = createAction('contact/Delete');\r\n\r\n// const addContact = ({name, number}) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n\r\n// export default { addContact, deleteContact, changeFilter };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2R2s3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"AppBar_navigation__3E6YY\",\"link\":\"AppBar_link__hsElA\",\"activeLink\":\"AppBar_activeLink__2AKfI\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return (\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};","export const getIsLoggedIn = state => state.auth.IsLoggedIn;\r\n\r\nexport const getUserName = state => state.auth.user.name;\r\n\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AppBar.module.css';\r\n\r\nconst AuthNav = () => (\r\n    <nav className={s.navigation}>\r\n        <NavLink to='/register' className={s.link} activeClassName={s.activeLink}>Register</NavLink>\r\n        <NavLink to='/login' className={s.link} activeClassName={s.activeLink}>Login</NavLink> \r\n        \r\n    </nav>\r\n)\r\n\r\nexport default AuthNav;","import { NavLink } from 'react-router-dom';\r\nimport s from './AppBar.module.css';\r\n\r\nconst Navigation = () => (\r\n    <nav className ={s.navigation}>\r\n        <NavLink exact to='/' className={s.link} activeClassName={s.activeLink}>Home</NavLink>               \r\n    </nav>\r\n)\r\n\r\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport s from '../AppBar/AppBar.module.css';\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: 4,\r\n    },\r\n    name: {\r\n        fontWeight: 700,\r\n        marginRight: 12,\r\n    },\r\n};\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(getUserName);\r\n\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <NavLink to='/contacts' className={s.link} activeClassName={s.activeLink}>Contacts</NavLink>\r\n            <span style={styles.name}>Wellcome, {name}</span>\r\n            {/* <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n                LogOut\r\n            </button> */}\r\n        </div>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors'\r\nimport s from './AppBar.module.css';\r\nimport AuthNav from './AuthNav';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nconst AppBar = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return(<header className={s.navigation}>\r\n        <Navigation />\r\n        {isLoggedIn ? <AuthNav />: <UserMenu /> }                 \r\n    </header>)    \r\n};\r\n\r\nexport default AppBar;","import { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Container from './components/Container/Container';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport AppBar from './components/AppBar/AppBar';\r\n\r\nconst HomePage = lazy(() => import('./views/HomePage' /* webpackChunkName:\"HomePage\" */));\r\nconst RegisterPage = lazy(() => import('./views/RegisterPage' /* webpackChunkName:\"MoviesPage\" */));\r\nconst LoginPage = lazy(() => import('./views/LoginPage' /* webpackChunkName:\"MovieDetailsPage\" */));\r\nconst ContactsPage = lazy(() => import('./views/ContactsPage' /* webpackChunkName:\"MovieDetailsPage\" */));\r\n\r\n\r\n// const useLocalStorage = (key, defaultValue) => {\r\n//    const [state, setState] = useState(() => {\r\n//        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n//    });\r\n//     return [state, setState].\r\n// };\r\n\r\n\r\nexport default function App() {\r\n\r\n     return (\r\n       <Container>\r\n         <AppBar />\r\n         \r\n         <Suspense fallback=\"waiting...\">\r\n           <Switch>\r\n             <Route path=\"/\" exact>\r\n               <HomePage />\r\n             </Route>\r\n             \r\n             <Route path=\"/login\" exact>\r\n               <LoginPage />\r\n             </Route>\r\n             \r\n             <Route path=\"/register\" exact>\r\n               <RegisterPage />\r\n             </Route>\r\n             \r\n             <Route path=\"/contacts\" exact>\r\n               <ContactsPage />\r\n             </Route>\r\n             \r\n             <Route>\r\n               <HomePage />\r\n             </Route>\r\n           </Switch>\r\n         </Suspense>\r\n    </Container>        \r\n    );\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addRequest,\r\n    addSuccess,\r\n    addError,\r\n    deleteRequest,\r\n    deleteSuccess,\r\n    deleteError,\r\n    changeFilter,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from './phonebook-actions';\r\nimport { fetchContacts, addContact, deleteContact } from './phonebook-operations';\r\n\r\n\r\nconst items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(({id}) => id !== payload),    \r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: ()=> false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n     [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n// const items = createReducer([], {\r\n//     [fetchContactsSuccess]: (state, { payload }) => payload,\r\n//     [addSuccess]: (state, { payload }) => [payload, ...state],\r\n//     [deleteSuccess]: (state, { payload }) => state.filter(({id}) => id !== payload),    \r\n// });\r\n\r\n// const items = (state = initilItems, {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [payload, ...state];\r\n        \r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload);\r\n  \r\n//         default:    \r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload\r\n               \r\n//         default:\r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {register, logIn} from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: {\r\n        name: null,\r\n        email: null,\r\n    },\r\n    token: null,\r\n    isLoggedIn: false,\r\n};\r\n\r\n const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n     extraReducers: {\r\n         [register.fulfilled](state, action) {\r\n             state.user = action.payload.user;\r\n             state.tocken = action.payload.token;\r\n             state.isLoggedIn = true;\r\n         },\r\n         [logIn.fulfilled](state, action) {\r\n             state.user = action.payload.user;\r\n             state.tocken = action.payload.token;\r\n             state.isLoggedIn = true;\r\n         }\r\n    },\r\n });\r\n\r\nexport default authSlice.reducer;","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore, FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\n\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst AuthPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token', 'user'],\r\n};\r\n\r\nconst ContactsPersistConfig = {\r\n  key: 'Contacts',\r\n  storage,\r\n};\r\n\r\nconst rootReduser = combineReducers({\r\n  contacts: persistReducer(ContactsPersistConfig, phonebookReducer),\r\n  auth: persistReducer(AuthPersistConfig, authReducer),  \r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReduser,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n      \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}