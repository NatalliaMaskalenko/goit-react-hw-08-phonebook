{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css","views/LoginPage.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","views/ContactsPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","styles","form","width","label","display","flexDirection","marginBottom","color","input","backgroundColor","borderRadius","padding","marginTop","LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","name","alert","onSubmit","preventDefault","logIn","style","autoComplete","type","onChange","Form","getItems","useSelector","state","contacts","items","setName","number","setNumber","reset","className","s","normolizedName","toLowerCase","find","item","addContact","form__label","form__input","pattern","title","required","currentTarget","form__button","ContactsItem","onDeleteContact","text","button","onClick","ContactsList","filter","normalizedFilter","includes","useEffect","fetchContacts","contacts__list","map","id","deleteContact","Filter","filter__label","filter__input","event","changeFilter","placeholder","ContactsPage"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,aAAe,6B,mBCA3ID,EAAOC,QAAU,CAAC,eAAiB,uC,mBCAnCD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,OAAS,+B,mBCA/FD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,cAAgB,gC,yHCG1EC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,GACdC,MAAO,8BAGTC,MAAO,CACLC,gBAAiB,6BACjBC,aAAc,EACdC,QAAS,EACTC,UAAW,KAIA,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXC,EAAe,SAACC,GAChB,OAAQA,EAAEC,OAAOC,MACb,IAAK,QACDR,EAASM,EAAEC,OAAO9B,OAClB,MACJ,IAAK,WACDyB,EAAYI,EAAEC,OAAO9B,OACrB,MACJ,QACIgC,MAAM,8BAelB,OACE,uBAAMC,SAZW,SAACJ,GACpBA,EAAEK,iBACFR,EAASS,YAAM,CACbb,QACAE,cAEFD,EAAS,IACTE,EAAY,KAKoBW,MAAO7B,EAAOC,KAAM6B,aAAa,MAA/D,UACE,wBAAOD,MAAO7B,EAAOG,MAArB,mBAEE,uBAAO0B,MAAO7B,EAAOQ,MACnBuB,KAAK,QACLP,KAAK,QACL/B,MAAOsB,EACPiB,SAAUX,OAGb,wBAAOQ,MAAO7B,EAAOG,MAArB,qBAEC,uBAAO0B,MAAO7B,EAAOQ,MACnBuB,KAAK,WACLP,KAAK,WACL/B,MAAOwB,EACPe,SAAUX,OAEd,wBAAQU,KAAK,SAAb,0B,0ICjEO,SAASE,IACtB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,SACjDnB,EAAWC,cAGjB,EAAwBN,mBAAS,IAAjC,mBAAOU,EAAP,KAAae,EAAb,KACA,EAA4BzB,mBAAS,IAArC,mBAAO0B,EAAP,KAAeC,EAAf,KAwBMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGZ,OACE,uBACEE,UAAWC,IAAE3C,KACbyB,SAtBiB,SAACJ,GACpBA,EAAEK,iBACF,IAAMkB,EAAiBrB,EAAKsB,cAExBZ,EAASa,MAAK,SAACC,GAAD,OAChBA,EAAKxB,KAAKsB,gBAAkBD,KAE1BpB,MAAM,GAAD,OAAID,EAAJ,4BApBM,SAACA,EAAMgB,GAAUrB,EAAS8B,YAAWzB,EAAMgB,IAsBvDd,CAAS,CAAEF,OAAMgB,WAEpBE,KASA,UAIE,wBAAOC,UAAWC,IAAEM,YAApB,iBAEE,uBACEP,UAAWC,IAAEO,YACb1D,MAAO+B,EACPO,KAAK,OACLP,KAAK,OACL4B,QAAQ,yHACTC,MAAM,kcACLC,UAAQ,EACRtB,SA1CiB,SAAAV,GACvBiB,EAAQjB,EAAEiC,cAAc9D,aA6CtB,wBAAOkD,UAAWC,IAAEM,YAApB,mBAEE,uBACEP,UAAWC,IAAEO,YACb1D,MAAO+C,EACPT,KAAK,MACLP,KAAK,SACL4B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRtB,SApDmB,SAAAV,GACzBmB,EAAUnB,EAAEiC,cAAc9D,aAsDxB,wBAAQkD,UAAWC,IAAEY,aAAczB,KAAK,SAAxC,4B,sCCxDS0B,EAfM,SAAC,GAAD,IAAGjC,EAAH,EAAGA,KAAMgB,EAAT,EAASA,OAAQkB,EAAjB,EAAiBA,gBAAjB,OAChB,qBAAIf,UAAWC,IAAEI,KAAjB,UACG,mBAAGL,UAAWC,IAAEe,KAAhB,SAAuBnC,IACvB,mBAAGmB,UAAWC,IAAEe,KAAhB,SAAuBnB,IACvB,wBAAQG,UAAWC,IAAEgB,OAAQC,QAAWH,EAAxC,wBCEO,SAASI,IACpB,IAAMzB,EAAWF,aAAY,SAACC,GAC1B,MAA0BA,EAAMC,SAAxB0B,EAAR,EAAQA,OAAQzB,EAAhB,EAAgBA,MAChB,GAAIyB,EAAQ,CACR,IAAMC,EAAmBD,EAAOjB,cAIpC,OAH4BR,EAAMyB,QAAO,SAAAf,GAAI,OACzCA,EAAKxB,KAAKsB,cAAcmB,SAASD,MAIrC,OAAO1B,KAILnB,EAAWC,cAOjB,OAJA8C,qBAAU,WACV/C,EAASgD,iBACR,CAAChD,IAGF,oBAAIwB,UAAWC,IAAEwB,eAAjB,SACS/B,EAASgC,KAAI,gBAAGC,EAAH,EAAGA,GAAI9C,EAAP,EAAOA,KAAMgB,EAAb,EAAaA,OAAb,OACV,cAAC,EAAD,CAEIhB,KAAMA,EACNgB,OAAQA,EACRkB,gBAAiB,kBAbT,SAAAY,GAAE,OAAInD,EAASoD,YAAcD,IAadZ,CAAgBY,KAHlCA,Q,6BC5BV,SAASE,IACpB,IAAM/E,EAAQ0C,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS0B,UAC5C5C,EAAWC,cAGjB,OAAQ,wBAAOuB,UAAWC,IAAE6B,cAApB,kCAEJ,uBAAO9B,UAAWC,IAAE8B,cAAe3C,KAAK,OAAOtC,MAAOA,EAAOuC,SAJ1C,SAAC2C,GAAD,OAAWxD,EAASyD,YAAaD,EAAMpD,OAAO9B,SAIsBoF,YAAY,oBCR5F,SAASC,IACpB,OACE,gCACE,2CACA,cAAC7C,EAAD,IACA,0CACA,cAACuC,EAAD,IACA,cAACV,EAAD","file":"static/js/MovieDetailsPage.d68602f8.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__17VRi\",\"form__label\":\"Form_form__label__2kuJ9\",\"form__input\":\"Form_form__input__1osmb\",\"form__button\":\"Form_form__button__1QM19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__3QjpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__BP66K\",\"text\":\"ContactsItem_text__1aOE3\",\"button\":\"ContactsItem_button__2-a5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__21k6y\",\"filter__input\":\"Filter_filter__input__2BVgD\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from '../redux/auth/auth-operations';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n    },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n    color: 'rgba(194, 194, 194, 0.658)',\r\n    \r\n  },\r\n  input: {\r\n    backgroundColor: 'rgba(194, 194, 194, 0.658)',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginTop: 10,\r\n    }\r\n};\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                setEmail(e.target.value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(e.target.value);\r\n                break;\r\n            default:\r\n                alert('check input name please ');\r\n        }\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logIn({\r\n      email,\r\n      password\r\n    }));\r\n    setEmail('');\r\n    setPassword('');\r\n        \r\n  };\r\n    \r\n    return (\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          E-mail\r\n          <input style={styles.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}          />\r\n        </label>\r\n\r\n         <label style={styles.label}>\r\n         Password\r\n          <input style={styles.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}          />\r\n        </label>\r\n        <button type=\"submit\">Sing In</button>\r\n\r\n      </form>\r\n   );};","import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport {addContact} from '../../redux/phonebook/phonebook-operations';\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n  const getItems = useSelector((state) => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number)=> dispatch(addContact(name, number));\r\n       \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const handleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  \r\n  const handleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n  \r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normolizedName = name.toLowerCase();\r\n    \r\n    if (getItems.find((item) =>      \r\n      item.name.toLowerCase() === normolizedName\r\n    )) {\r\n        alert(`${name} is already in contacts`);\r\n      } else {\r\n       onSubmit({ name, number }); \r\n    };      \r\n    reset()\r\n  };\r\n  \r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n  \r\n  return (\r\n    <form\r\n      className={s.form}\r\n      onSubmit={handelSubmit}>\r\n      \r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      \r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n        />\r\n      </label>\r\n      <button className={s.form__button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )  \r\n};\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(phonebookActions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({ name, number, onDeleteContact }) => (\r\n     <li className={s.item}>\r\n        <p className={s.text}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button className={s.button} onClick = {onDeleteContact}>Delete</button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\n// import { getAllContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport s from './ContactsList.module.css'\r\nimport ContactsItem from '../ContactsItem';\r\n\r\n\r\nexport default function ContactsList () {\r\n    const contacts = useSelector((state) => {\r\n        const { filter, items } = state.contacts;\r\n        if (filter) {\r\n            const normalizedFilter = filter.toLowerCase();\r\n            const visibleContacts = items.filter(item =>\r\n            item.name.toLowerCase().includes(normalizedFilter)\r\n        );       \r\n        return visibleContacts;\r\n        }\r\n        return items;        \r\n    });\r\n    \r\n   \r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n    \r\n    useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n    return (\r\n    <ul className={s.contacts__list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactsItem\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n        ))}\r\n    </ul>\r\n    )\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     const { filter, items } = state.contacts;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     const visibleContacts = items.filter(item =>\r\n//         item.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n    \r\n//     return {\r\n//     contacts: visibleContacts,\r\n//     }\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\nimport {changeFilter} from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter () {\r\n    const value = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n    const onChangeFilter = (event) => dispatch(changeFilter(event.target.value));\r\n\r\n    return (<label className={s.filter__label}>\r\n        Find contacts by name\r\n        <input className={s.filter__input} type=\"text\" value={value} onChange={onChangeFilter} placeholder=\"Jacob Mercer\" />\r\n    </label>)\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//     value: state.contacts.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import Form from '../components/Form/Form';\r\nimport ContactsList from '../components/ContactsList/ContactsList';\r\nimport Filter from '../components/Filter';\r\n\r\n\r\nexport default function ContactsPage() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form/>\r\n        <h2>Contacts</h2>\r\n        <Filter/>\r\n        <ContactsList/>\r\n      </div>\r\n   );};"],"sourceRoot":""}