{"version":3,"sources":["redux/Phonebook/selectors.js","components/Form/Form.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsPage.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","views/views.module.css"],"names":["getContacts","state","contacts","contactItems","getLoading","loadingProcess","connect","dispatch","onSubmit","name","number","addContact","useState","userName","setName","setNumber","active","useDispatch","useSelector","handleChange","e","target","value","console","warn","reset","preventDefault","newContacts","id","shortid","generate","find","contact","alert","className","s","form","form__label","form__text","form__input","type","pattern","required","onChange","placeholder","form__button","disabled","Loader","styles","spin","size","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","deleteContact","fetchContactsAll","fetchContacts","isLoading","useEffect","list","map","item","text","button","onClick","changeFilter","filter__label","filter__input","currentTarget","ContactsPage","container","module","exports"],"mappings":"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","file":"static/js/ContactsPage.3fad8261.chunk.js","sourcesContent":["\nexport const getContacts = (state) => state.contacts.contactItems;\nexport const getLoading = state => state.contacts.loadingProcess;\nexport const getFilter = (state) => state.filter;\n","import { useState } from \"react\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/Phonebook/phonebook-operation\";\nimport s from \"./Form.module.css\";\nimport shortid from \"shortid\";\n\nimport { getContacts } from \"../../redux/Phonebook/selectors\";\n\n\nfunction Form() {\n\n    const [userName, setName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const [active] = useState(false);\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"number\":\n                setNumber(value);\n                break;\n            default:\n                console.warn(`Field - ${name} is under constraction`);\n                return\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newContacts = {\n            name: userName,\n            number: number,\n            id: shortid.generate(),\n        };\n        if (contacts.find((contact) => contact.name === userName)) {\n            alert(`Sorry, ${userName} is already in yours contacts list`);\n\n            reset();\n            return\n        }\n\n\n        dispatch(addContact(newContacts));\n        reset();\n    };\n\n    const reset = () => {\n        setName(\"\");\n        setNumber(\"\");\n    };\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.form__label}>\n                <p className={s.form__text}>Name:</p>\n                <input\n                    className={s.form__input}\n                    type=\"text\"\n                    id={shortid.generate()}\n                    name=\"name\"\n                    value={userName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    required\n                    onChange={handleChange}\n                    placeholder=\"Rosie Simpson\"\n                />\n            </label>\n\n            <label className={s.form__label}>\n                <p className={s.form__text}>Number:</p>\n                <input\n                    className={s.form__input}\n                    type=\"tel\"\n                    id={shortid.generate()}\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    required\n                    onChange={handleChange}\n                    placeholder=\"459-12-56\"\n                />\n            </label>\n            <button className={s.form__button} type=\"submit\" disabled={active}>\n                Add contact\n            </button>\n        </form>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { ImSpinner } from \"react-icons/im\";\nimport styles from \"./Loader.module.css\";\n\nexport default function Loader() {\n    return (\n        <div className=\"spinner\">\n            <div className={styles.spin}>\n                <ImSpinner size=\"32\" className=\"icon-spin\" />\n                Loading...\n            </div>\n        </div>\n    );\n}","import s from './ContactList.module.css'\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n    deleteContact,\n    fetchContacts,\n} from '../../redux/Phonebook/phonebook-operation';\nimport Loader from \"../Loader/Loader\";\nimport { getLoading } from '../../redux/Phonebook/selectors';\n\nconst ContactList = ({ contacts, deleteContact, fetchContactsAll }) => {\n    const isLoading = useSelector(getLoading);\n\n    useEffect(() => {\n        fetchContactsAll();\n    }, [fetchContactsAll]);\n\n    return (\n        <>\n            <div >\n                <ul className={s.list}>\n                    {isLoading && <Loader />}\n                    {contacts.map(({ id, name, number }) => (\n                        <li key={id} className={s.item}>\n                            <p className={s.text}>{name}</p>\n                                <p className={s.text}>{number}</p>\n                            <button\n                                className={s.button}\n                                type=\"button\"\n                                onClick={() => deleteContact(id)}\n                            >\n                                Delete\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n};\n\n\nconst getFilteredContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n    );\n};\n\nconst mapStateToProps = ({\n    contacts: { contactItems, filter } }) => ({\n        contacts: getFilteredContacts(contactItems, filter),\n    });\n\nconst mapDispatchToProps = dispatch => ({\n    deleteContact: id => dispatch(deleteContact(id)),\n    fetchContactsAll: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n","\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, changeFilter }) => {\n    return (\n        <label className={s.filter__label}>\n            <p className = {s.text}>Find contacts by name:</p>\n            <input\n                className={s.filter__input}\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={e => changeFilter(e.currentTarget.value)}\n            />\n        </label>\n    );\n}\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\n\nconst mapDispatchToProps = dispatch => ({\n    changeFilter: value => dispatch(changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n\n\n\n\n","import Form from '../components/Form/Form';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport s from './views.module.css'\n\nexport default function ContactsPage() {\n    return (\n        <div className={s.container}>\n            <h1>Phonebook</h1>\n            <Form />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__17VRi\",\"form__label\":\"Form_form__label__2kuJ9\",\"form__input\":\"Form_form__input__1osmb\",\"form__button\":\"Form_form__button__1QM19\",\"form__text\":\"Form_form__text__K5bRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__LMnMZ\",\"item\":\"ContactList_item__1w9X2\",\"text\":\"ContactList_text__2yE91\",\"button\":\"ContactList_button__3lbgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__21k6y\",\"filter__input\":\"Filter_filter__input__2BVgD\",\"text\":\"Filter_text__OtIoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"views_container__C9ulX\"};"],"sourceRoot":""}